"use strict";
const btn = document.querySelector("button");

btn.onclick = function () { // Назначаем тот элемент на который хотим повесить наше событие и дальше используем свойство dom дерева.
    alert("click"); // Назначаем что мы хотим сделать при клике на кнопку. 
}; // Такое код почти не испльзуется

btn.addEventListener("click", () => { // Он следит за нашим событием которое мы назначили, и если оно произошло, то выполняется callback функция. Callback функция выполнится только после того, как произойет событие(клик). Свойство callback функции. 
    alert("click"); 
});

btn.addEventListener("click", () => { // И мы можем выполнять это событие много раз, в отличии от других методов. Таким образом наш функционал не потеряется.
    alert("second click"); 
});

// События в javascript выполняются в порядке очереди. Как только у нас новое событие поступило, оно добавляется в очередь вне зависимости от других событий.

btn.addEventListener("mouseenter", () => { // Действие mouseenter позволяет при наведении на блок выполнять функцию. 
    console.log("Hover"); 
});

// Нам иногда нужно получать какие-то данные о том элементе с которым мы взаимодействуем. Этот объект события передается как аргумент. Название не играет роли, и он всегда передается первым аргументом.

btn.addEventListener("click", (e) => { 
    console.log(e.target); // Свойство target это тот элемент, на котором произошло событие. Таким образом, мы получаем доступ к нашему элементу и теперь мы можем с нашим элементом что-то сделать. Например, перекрасить его, поменять ему класс, или просто удалить его со страницы.
    e.target.remove();
    // console.log("Hover"); 
}); 

//Иногда нам нужно удалять некоторые обработчики событий с некоторых элементов.


let i = 0;
const deleteElement = (e) => {
    console.log(e.target); 
    i++;
    if (i == 1) {
        btn.removeEventListener("click", deleteElement); // После того, как у нас выполнится клик по этому элементу, у нас выполнится эта функция. Мы её не вызываем, мы не ставит круглые скобки. Мы просто ссылаемся на функцию которая будет выполняться после клика.
    }
};

btn.addEventListener("click", deleteElement);
